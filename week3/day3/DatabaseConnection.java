package week3.day3;

/*Home Assignment <3A>: Demonstrating Interface in Java Learning Objective: To gain a clear understanding of Interface in Java by implementing an interface and its methods related to database connection. Expected Completion Time: Best Case: 15 minutes Average Case: 20 minutes Assignment Details: Design an interface DatabaseConnection with abstract methods representing various database methods and implement those methods in a Concrete class JavaConnection. Requirements: - Create an interface DatabseConnection with the following abstract methods: - connect() - disconnect() - executeUpdate() - Implement the interface in a Concrete class. - Provide concrete implementations for the abstract methods in the Concrete class. Hints to Solve: - Use appropriate keyword to indicate that a class is implementing an interface. Reference Links: Abstraction in Java - Oracle Docs Expected Outcome: Upon completion, you should be able to: - Grasp the concept of Interface in Java, including interfaces and concrete class. - Created a practical example of how Interface allows for the definition of a common structure while leaving specific implementations to subclass.
Home Assignment <3B>: Demonstrating Abstraction in Java Learning Objective: To understand and implement the concept of Abstraction in Java by creating interface, an abstract class and a concrete class with the context of database connections Expected Completion Time: Best Case: 20 minutes Average Case: 30 minutes Assignment Details: Design an abstract class that implements an interface with abstract methods for creating and managing database and further implement those methods in a concrete class. Requirements: - Create an Interface DatabaseConnection with the following abstract methods: - connect() - disconnect() - executeUpdate - Create an Abstract Class MySqlConnection that implements DatabaseConnection interface and adds `executeQuery()`
- Create a Concrete Class JavaConnection that inherits MySqlConnection, implementing methods. Hints to Solve: - Utilize appropriate keywords to signify that a class is implementing an interface. - Implement abstract methods in the concrete class to provide specific functionality Reference Links: Abstraction in Java - Oracle Docs Expected Outcome: Upon completion, you should be able to: - Grasp the concept of Abstraction in Java, including interface and concrete class. - Created a practical example of how abstraction allows for the definition of a common structure while leaving specific implementations to subclass.*/
public interface DatabaseConnection {
	public void connect();
	public void disconnect();
	public void executeupdate();
	

}
